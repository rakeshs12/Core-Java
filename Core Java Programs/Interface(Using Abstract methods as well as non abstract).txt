package newpack;



class ForNoReason{
   
 
    int a=50;
  
  ForNoReason(){

    System.out.println("here for no reason");

}

}


interface A{
   
 
    int g=22;
    
String name="ABC";
    

    void info();
   
 void xyz();

}



abstract class A_inside implements A{
   
 
    void infoCOPY()
{

    System.out.println("I will not display interface's message, i am not interface method, i am infoCOPY.");
    
 

   System.out.println("So I am abstract class");


}

}


class FullImplementation implements A
{

  public void info()  {

        System.out.println(g);

        
    }
 
   
 public   void xyz(){
    
    System.out.println(name);
  
  }

}


public class MAINCLASS{
    
public static void main(String args[])  
{
  
      ForNoReason obj1=new ForNoReason();
   
   //no object for abstract class
 
  //FullImplementation f=new FullImplementation(); 
//This can be used for same purpose

//this is alternative, using interface type variable



A f=new FullImplementation();
  
    f.info();

      f.xyz();

    }

}

/* output
$javac newpack/MAINCLASS.java
$java -Xmx128M -Xms16M newpack/MAINCLASS
here for no reason
22
ABC
*/